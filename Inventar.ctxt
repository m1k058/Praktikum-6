#BlueJ class context
comment0.target=Inventar
comment0.text=\r\n\ Verwaltet\ eine\ Sammlung\ von\ Gegenst\u00E4nden\ (Items)\ f\u00FCr\ Entit\u00E4ten\ im\ Spiel,\r\n\ wie\ Spieler\ oder\ R\u00E4ume.\ Dieses\ Inventar\ z\u00E4hlt\ die\ Vorkommen\ jedes\ ItemTyps.\r\n\ Es\ erm\u00F6glicht\ das\ Hinzuf\u00FCgen,\ Entfernen\ und\ Abfragen\ von\ Items\ und\ deren\ Anzahl,\r\n\ sowie\ das\ Verschieben\ von\ Items\ zwischen\ Inventaren.\r\n\r\n\ @author\ \ Michal\ Kos\r\n\ @version\ 04.06.2025\r\n
comment1.params=
comment1.target=Inventar()
comment1.text=\r\n\ Erzeugt\ ein\ neues,\ leeres\ Inventar.\r\n
comment10.params=name
comment10.target=ItemTyp\ findeItemTyp(java.lang.String)
comment10.text=\r\n\ Findet\ einen\ {@link\ ItemTyp}\ basierend\ auf\ dem\ \u00FCbergebenen\ Anzeigenamen.\r\n\ Die\ Suche\ ignoriert\ Gro\u00DF-\ und\ Kleinschreibung.\r\n\r\n\ @param\ name\ Der\ Anzeigename\ des\ gesuchten\ ItemTyps\ (z.B.\ "M\u00FCnze").\r\n\ @return\ Der\ gefundene\ ItemTyp\ oder\ `null`,\ wenn\ kein\ passender\ Typ\ existiert\r\n\ oder\ der\ `name`\ null\ ist.\r\n
comment2.params=typName
comment2.target=void\ addItem(java.lang.String)
comment2.text=\r\n\ F\u00FCgt\ einen\ Gegenstand\ des\ angegebenen\ Typs\ zum\ Inventar\ hinzu.\r\n\ Wenn\ der\ ItemTyp\ bereits\ im\ Inventar\ vorhanden\ ist,\ wird\ dessen\ Anzahl\ um\ 1\ erh\u00F6ht.\r\n\ Andernfalls\ wird\ der\ ItemTyp\ mit\ der\ Anzahl\ 1\ neu\ hinzugef\u00FCgt.\r\n\r\n\ @param\ typName\ Der\ Name\ des\ hinzuzuf\u00FCgenden\ ItemTyps\ (z.B.\ "M\u00FCnze").\r\n\ Die\ Methode\ vernachl\u00E4ssigt\ Gro\u00DF-/Kleinschreibung.\r\n
comment3.params=typName\ anzahl
comment3.target=void\ addItemAnzahl(java.lang.String,\ int)
comment3.text=\r\n\ F\u00FCgt\ eine\ bestimmte\ Anzahl\ von\ Gegenst\u00E4nden\ eines\ ItemTyps\ zum\ Inventar\ hinzu.\r\n\ Wenn\ der\ ItemTyp\ bereits\ im\ Inventar\ vorhanden\ ist,\ wird\ dessen\ Anzahl\ um\ die\r\n\ angegebene\ Menge\ erh\u00F6ht.\ Andernfalls\ wird\ der\ ItemTyp\ mit\ der\ angegebenen\ Anzahl\ neu\ hinzugef\u00FCgt.\r\n\r\n\ @param\ typName\ Der\ Name\ des\ hinzuzuf\u00FCgenden\ ItemTyps.\r\n\ @param\ anzahl\ Die\ Anzahl\ der\ Items,\ die\ hinzugef\u00FCgt\ werden\ sollen.\ Muss\ positiv\ sein\r\n
comment4.params=typName
comment4.target=boolean\ removeItem(java.lang.String)
comment4.text=\r\n\ Entfernt\ ein\ Exemplar\ eines\ ItemTyps\ aus\ dem\ Inventar.\r\n\ Wenn\ der\ angegebene\ ItemTyp\ mehrfach\ vorhanden\ war,\ wird\ seine\ Anzahl\ dekrementiert.\r\n\ Ist\ es\ das\ letzte\ Exemplar\ dieses\ Typs,\ wird\ der\ ItemTyp\ komplett\ aus\ dem\ Inventar\ entfernt.\r\n\r\n\ @param\ typName\ Der\ Name\ des\ zu\ entfernenden\ ItemTyps.\r\n\ Wenn\ der\ `typName`\ null\ ist\ oder\ keinem\ bekannten\ ItemTyp\ entspricht,\r\n\ oder\ das\ Item\ nicht\ im\ Inventar\ ist,\ wird\ `false`\ zur\u00FCckgegeben.\r\n\ @return\ `true`,\ wenn\ ein\ Exemplar\ des\ Typs\ erfolgreich\ entfernt\ wurde;\r\n
comment5.params=typName\ anzahl
comment5.target=boolean\ removeItemAnzahl(java.lang.String,\ int)
comment5.text=\r\n\ Entfernt\ eine\ bestimmte\ Anzahl\ von\ Exemplaren\ eines\ ItemTyps\ aus\ dem\ Inventar.\r\n\ Wenn\ nach\ dem\ Entfernen\ die\ Anzahl\ des\ ItemTyps\ auf\ 0\ oder\ weniger\ fallen\ w\u00FCrde,\r\n\ wird\ der\ ItemTyp\ komplett\ aus\ dem\ Inventar\ entfernt.\r\n\r\n\ @param\ typName\ Der\ Name\ des\ ItemTyps,\ von\ dem\ Exemplare\ entfernt\ werden\ sollen.\r\n\ @param\ anzahl\ \ Die\ Anzahl\ der\ zu\ entfernenden\ Exemplare.\r\n\ Wenn\ das\ Item\ nicht\ in\ ausreichender\r\n\ Menge\ vorhanden\ ist,\ wird\ `false`\ zur\u00FCckgegeben\ und\ das\ Inventar\r\n\ nicht\ ver\u00E4ndert.\r\n\ @return\ `true`,\ wenn\ die\ angegebene\ Anzahl\ von\ Exemplaren\ erfolgreich\ entfernt\ wurde,\r\n\ `false`\ sonst.\r\n
comment6.params=typName
comment6.target=int\ gibAnzahlItems(java.lang.String)
comment6.text=\r\n\ Gibt\ die\ Anzahl\ der\ Items\ eines\ bestimmten\ ItemTyps\ im\ Inventar\ zur\u00FCck.\r\n\r\n\ @param\ typName\ Der\ Name\ des\ ItemTyps,\ dessen\ Anzahl\ ermittelt\ werden\ soll.\r\n\ @return\ Die\ Anzahl\ der\ Items\ dieses\ Typs\ im\ Inventar.\ Gibt\ 0\ zur\u00FCck,\r\n\ wenn\ der\ ItemTyp\ nicht\ im\ Inventar\ vorhanden\ ist\ oder\ `typName`\ ung\u00FCltig\ ist.\r\n
comment7.params=
comment7.target=boolean\ istLeer()
comment7.text=\r\n\ Pr\u00FCft,\ ob\ das\ Inventar\ leer\ ist.\r\n\ @return\ `true`,\ wenn\ das\ Inventar\ leer\ ist,\ sonst\ `false`.\r\n
comment8.params=
comment8.target=java.lang.String\ gibInventarAlsString()
comment8.text=\r\n\ Erzeugt\ eine\ Zeichenkette,\ die\ den\ Inhalt\ des\ Inventars\ darstellt.\r\n\ Jeder\ ItemTyp\ wird\ mit\ seiner\ Anzahl\ und\ Beschreibung\ aufgelistet.\r\n\ Beispiel\:\ "-\ Baugenehmigung\ (2)\ \ [Dieses\ St\u00FCck\ Papier\ darf\ nur\ per\ Fax\ versendet\ werden]"\ \ \ \ \ *\r\n\ @return\ Eine\ Zeichenkette,\ die\ den\ Inhalt\ des\ Inventars\ beschreibt.\r\n\ Gibt\ `null`\ zur\u00FCck,\ wenn\ das\ Inventar\ leer\ ist.\r\n
comment9.params=typName\ vonInventar\ zuInventar
comment9.target=boolean\ bewegeItem(java.lang.String,\ Inventar,\ Inventar)
comment9.text=\r\n\ Verschiebt\ ein\ Item\ eines\ bestimmten\ ItemTyps\ von\ einem\ Quellinventar\r\n\ in\ ein\ Zielinventar.\r\n\ @param\ typName\ \ \ \ \ Der\ Name\ des\ ItemTyps\ des\ zu\ verschiebenden\ Items.\r\n\ @param\ vonInventar\ Das\ Inventar,\ aus\ dem\ das\ Item\ entfernt\ werden\ soll.\r\n\ @param\ zuInventar\ \ Das\ Inventar,\ zu\ dem\ das\ Item\ hinzugef\u00FCgt\ werden\ soll.\r\n\ @return\ `true`,\ wenn\ das\ Item\ erfolgreich\ verschoben\ wurde,\ sonst\ `false`.\r\n
numComments=11
